version: '3'

volumes:
  db_corneta:
    driver: local

services:
  db:
    container_name: pg_container
    image: postgres
    restart: always
    volumes:
      - ./database/init-database.sql:/docker-entrypoint-initdb.d/init-database.sql
      - ./db_corneta/postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: corneta
      POSTGRES_INITDB_ARGS: '--auth-host=scram-sha-256 --auth-local=scram-sha-256'
    ports:
      - "5432:5432"
    networks:
      - corneta-network
  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    networks:
      - corneta-network
  mongo:
    container_name: mongo-corneta
    image: mongo:latest
    restart: unless-stopped
    volumes:
      - ./db_corneta/mongo-data:/data/db
    ports:
      - "27017:27017"
    networks:
      - corneta-network
    command: [ "--bind_ip", "0.0.0.0" ]
  app-corneta:
    container_name: corneta
    build:
      context: ..
      dockerfile: Dockerfile
    image: corneta:latest
    ports:
      - "80:8080"
    depends_on:
      - db
      - mongo
    networks:
      - corneta-network

networks:
  corneta-network:
    driver: bridge
